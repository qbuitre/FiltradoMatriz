/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package filtradomatriz;

import java.util.Random;
import javax.swing.JOptionPane;

/**
 *
 * @author Entrar
 */
public class FiltradoMatrizForm extends javax.swing.JFrame {

    
    private static int valorBarra = 0;
    private static String valorMin = "0";
    private static String valorMax = "100";
    private static int[][] matriz = new int[10][10];
    /**
     * Creates new form FiltradoMatrizForm
     */
    public FiltradoMatrizForm() {
        initComponents();
        
        barraDes.setMajorTickSpacing(10);
        barraDes.setPaintTicks(true);
        barraDes.setMinorTickSpacing(2);
        barraDes.setPaintLabels(true);
        matrizArea.setEditable(false);
        for(int i = 0; i < matriz.length; i ++) {
            for(int j = 0; j < matriz[i].length; j++) {
                matriz[i][j] = Integer.parseInt(valorMin);
            }
        }
        matrizArea.setText(matriz.toString());
    }
    
    public static boolean isNumeric(String s) {
        try {
            if(s == null || s.equals("")) {
                JOptionPane.showMessageDialog(null, "Introduce un valor");
                return false;
            }
            Integer.parseInt(s);
            return true;
        } catch(NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Introduce un valor númerico");
            return false;
        }
    }
    
    private static int[][] generarMatriz() {
        int minimo = Integer.parseInt(valorMin);
        int maximo = Integer.parseInt(valorMax);
        Random r = new Random();
        for(int i = 0; i < matriz.length; i++) {
            for(int j = 0; j < matriz[i].length; j++) {
                matriz[i][j] = r.nextInt((maximo - minimo) + 1) + minimo;
            }
        }
        return matriz;
    }
    
    private static void showMatriz(int[][] m, int valor) {
        String s = "";
        for(int i = 0; i < m.length; i++) {
            for(int j = 0; j < m[i].length; j++) {
                if(m[i][j] > valor) {
                    s += m[i][j] + "\t";
                } else {
                    s += "-" + "\t";
                }
            }
            s += "\n";
        }
        matrizArea.setText(s);
    }
    
    private static void showMatriz(int valor) {
        String s = "";
        for(int i = 0; i < matriz.length; i++) {
            for(int j = 0; j < matriz[i].length; j++) {
                if(matriz[i][j] > valor) {
                    s += matriz[i][j] + "\t";
                } else {
                    s += "-" + "\t";
                }
            }
            s += "\n";
        }
        matrizArea.setText(s);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelConf = new javax.swing.JPanel();
        valorMinField = new javax.swing.JTextField();
        valorMaxField = new javax.swing.JTextField();
        valorMinLabel = new javax.swing.JLabel();
        valorMaxLabel = new javax.swing.JLabel();
        barraDes = new javax.swing.JSlider();
        barraDesLabel = new javax.swing.JLabel();
        valorLabel = new javax.swing.JLabel();
        panelMatriz = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        matrizArea = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        panelConf.setBackground(new java.awt.Color(153, 204, 255));
        panelConf.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2), "Configuración", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 10))); // NOI18N

        valorMinField.setToolTipText("Valor mínimo de elementos de la matriz");
        valorMinField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                valorMinFieldActionPerformed(evt);
            }
        });

        valorMaxField.setToolTipText("Valor máximo de elementos de la matriz");
        valorMaxField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                valorMaxFieldActionPerformed(evt);
            }
        });

        valorMinLabel.setText("Valor mínimo:");

        valorMaxLabel.setText("Valor máximo:");

        barraDes.setToolTipText("Valor mínimo que se muestra en la matriz filtrada");
        barraDes.setValue(0);
        barraDes.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                barraDesStateChanged(evt);
            }
        });

        barraDesLabel.setText("Valor de filtrado:");

        valorLabel.setText("Valor:");

        javax.swing.GroupLayout panelConfLayout = new javax.swing.GroupLayout(panelConf);
        panelConf.setLayout(panelConfLayout);
        panelConfLayout.setHorizontalGroup(
            panelConfLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelConfLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelConfLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(barraDes, javax.swing.GroupLayout.DEFAULT_SIZE, 472, Short.MAX_VALUE)
                    .addGroup(panelConfLayout.createSequentialGroup()
                        .addGroup(panelConfLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(valorMinLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(valorMinField))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(panelConfLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(valorMaxField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(valorMaxLabel, javax.swing.GroupLayout.Alignment.TRAILING)))
                    .addGroup(panelConfLayout.createSequentialGroup()
                        .addComponent(barraDesLabel)
                        .addGap(116, 116, 116)
                        .addComponent(valorLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        panelConfLayout.setVerticalGroup(
            panelConfLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelConfLayout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addGroup(panelConfLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(valorMinLabel)
                    .addComponent(valorMaxLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelConfLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(valorMinField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(valorMaxField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(panelConfLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(barraDesLabel)
                    .addComponent(valorLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(barraDes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        panelMatriz.setBackground(new java.awt.Color(153, 153, 153));
        panelMatriz.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2), "Matriz filtrada", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 10))); // NOI18N

        matrizArea.setColumns(20);
        matrizArea.setRows(5);
        jScrollPane1.setViewportView(matrizArea);

        javax.swing.GroupLayout panelMatrizLayout = new javax.swing.GroupLayout(panelMatriz);
        panelMatriz.setLayout(panelMatrizLayout);
        panelMatrizLayout.setHorizontalGroup(
            panelMatrizLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelMatrizLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        panelMatrizLayout.setVerticalGroup(
            panelMatrizLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelMatrizLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 202, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(panelConf, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(panelMatriz, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(21, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panelConf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelMatriz, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void valorMinFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_valorMinFieldActionPerformed
        valorMin = valorMinField.getText();
        if(!isNumeric(valorMin)) {
            return;
        }
        int vmin = Integer.parseInt(valorMin);
        if(vmin >= Integer.parseInt(valorMax)) {
            JOptionPane.showMessageDialog(null, "El valor mínimo debe ser menor que el máximo");
            return;
        }
        barraDes.setMinimum(vmin);
        if(vmin > 0) {
            barraDes.setMajorTickSpacing(vmin / 10);
        }
        showMatriz(generarMatriz(),valorBarra);
    }//GEN-LAST:event_valorMinFieldActionPerformed

    private void valorMaxFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_valorMaxFieldActionPerformed
        valorMax = valorMaxField.getText();
        if(!isNumeric(valorMax)) {
            return;
        }
        int vmax = Integer.parseInt(valorMax);
        if(vmax <= Integer.parseInt(valorMin)) {
            JOptionPane.showMessageDialog(null, "El valor mínimo debe ser menor que el máximo");
            return;
        }
        barraDes.setMaximum(vmax);
        if(vmax > 0) {
            barraDes.setMajorTickSpacing(vmax / 10);
        }
        showMatriz(generarMatriz(),valorBarra);
    }//GEN-LAST:event_valorMaxFieldActionPerformed

    private void barraDesStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_barraDesStateChanged
        valorBarra = barraDes.getValue();
        valorLabel.setText("Valor: " + valorBarra);
        showMatriz(valorBarra);
    }//GEN-LAST:event_barraDesStateChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FiltradoMatrizForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FiltradoMatrizForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FiltradoMatrizForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FiltradoMatrizForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FiltradoMatrizForm().setVisible(true);
                showMatriz(generarMatriz(), valorBarra);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JSlider barraDes;
    private javax.swing.JLabel barraDesLabel;
    private javax.swing.JScrollPane jScrollPane1;
    private static javax.swing.JTextArea matrizArea;
    private javax.swing.JPanel panelConf;
    private javax.swing.JPanel panelMatriz;
    private javax.swing.JLabel valorLabel;
    private javax.swing.JTextField valorMaxField;
    private javax.swing.JLabel valorMaxLabel;
    private javax.swing.JTextField valorMinField;
    private javax.swing.JLabel valorMinLabel;
    // End of variables declaration//GEN-END:variables
}
